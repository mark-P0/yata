.flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}
.flex-maximize {
  display: flex;
}
.flex-maximize > * {
  flex: 1;
}
.fs-smaller {
  font-size: smaller;
}
.z-low {
  z-index: -100;
}
.z-normal {
  z-index: 0;
}
.z-high {
  z-index: 100;
}
.border-none {
  border: none;
}
.shadow-md {
  --base-size: calc(1rem / 3);
  box-shadow: 0 calc(var(--base-size) / 2) var(--base-size) rgb(0 0 0 / 15%);
}
.space-before::before {
  margin-right: 0.5rem;
}
.space-after::after {
  margin-left: 0.5rem;
}

.scrollbar {
  --scrollbar-color: var(--bs-dark-rgb);
  --scrollbar-opacity: 100%;
  --scrollbar-thumb: rgba(var(--scrollbar-color), var(--scrollbar-opacity));

  scrollbar-color: var(--scrollbar-thumb) transparent;
}
.scrollbar::-webkit-scrollbar-thumb {
  background-color: var(--scrollbar-thumb);
}
.scrollbar::-webkit-scrollbar-track {
  background-color: transparent;
}
/*  Firefox (CSS Scrollbar)
 *  https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Scrollbars
 */
.scrollbar-thin {
  scrollbar-width: thin;
}
/*  Chrome, Edge, Safari
 *  https://css-tricks.com/almanac/properties/s/scrollbar/
 *  https://www.digitalocean.com/community/tutorials/css-scrollbars
 */
.scrollbar-thin::-webkit-scrollbar {
  /* `scrollbar-width: thin;` is roughly equivalent to `0.5rem` */
  width: 0.5rem;
  height: 0.5rem;
}
.scrollbar-translucent {
  --scrollbar-opacity: 5%;
}

#app {
  max-width: 1440px;
  display: grid;
}
main {
  padding: 5rem 1rem;
}
@media only screen and (min-width: 0px) {
  #app {
    grid-template-rows: min-content 1fr;
    grid-template-columns: initial;
  }
}
@media only screen and (min-width: 576px) {
  #app {
    grid-template-rows: initial;
    grid-template-columns: 1fr 4fr;
  }
}
@media only screen and (min-width: 992px) {
  aside {
    margin: 1rem;
    border-radius: var(--bs-border-radius);
  }
}

/*  Workaround to absolutely positioned element scrolling with the parent container
 *  Padding of the absolute-position element gives it a size,
 *  within which a fixed-position element can be centered.
 *  Not entirely sure how it works...
 *  https://stackoverflow.com/a/40459794
 */
#floating-button {
  --size: 3rem;
  padding: var(--size);
}
#floating-button button {
  width: var(--size);
  height: var(--size);
}

main .d-grid {
  display: grid;
  grid-template-columns: repeat(var(--col-ct), 1fr);
}
@media only screen and (min-width: 0px) {
  main .d-grid {
    --col-ct: 1;
  }
}
@media only screen and (min-width: 576px) {
  main .d-grid {
    --col-ct: 2;
  }
}
@media only screen and (min-width: 992px) {
  main .d-grid {
    --col-ct: 3;
  }
}

.priority {
  /*  Color variable set via JS
   *  `Element.style.setProperty(var, value)`
   *  https://css-tricks.com/updating-a-css-variable-with-javascript/
   */
  --priority-color: hsl(var(--hue) 50% 50%);
}
.priority.btn {
  /* Taken from Bootstrap's `btn-outline-_____` class */
  --bs-btn-color: var(--priority-color);
  --bs-btn-border-color: var(--priority-color);
  --bs-btn-hover-color: #fff;
  --bs-btn-hover-bg: var(--priority-color);
  --bs-btn-hover-border-color: var(--priority-color);
  --bs-btn-focus-shadow-rgb: 13, 110, 253;
  --bs-btn-active-color: #fff;
  --bs-btn-active-bg: var(--priority-color);
  --bs-btn-active-border-color: var(--priority-color);
  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  --bs-btn-disabled-color: var(--priority-color);
  --bs-btn-disabled-bg: transparent;
  --bs-btn-disabled-border-color: var(--priority-color);
  --bs-gradient: none;
}
.priority.card {
  border: none;
  border-left: var(--bs-card-border-radius) solid var(--priority-color);
}
